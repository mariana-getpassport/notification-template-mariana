# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
default_stages: [commit]
exclude: ^Makefile|^protos/|^alembic/|^docs/|(?i)_pb2\.py$|(?i)_pb2_grpc\.py$|.vscode/launch.json$

repos:

# These meta hooks check the pre-commit configuration itself.
- repo: meta
  hooks:
  - id: check-hooks-apply
  - id: check-useless-excludes

# Commitizen enforces semantic and conventional commit messages.
- repo: https://github.com/commitizen-tools/commitizen
  rev: v2.20.4
  hooks:
  - id: commitizen
    name: Check conventional commit message
    stages: [commit-msg]

# Sort imports.
- repo: https://github.com/pycqa/isort
  rev: 5.10.1
  hooks:
  - id: isort
    name: Sort import statements
    args: [-l, '120', --profile, black, --resolve-all-config]

# Add Black code formatters.
- repo: https://github.com/ambv/black
  rev: 22.3.0
  hooks:
  - id: black
    name: Format code
- repo: https://github.com/asottile/blacken-docs
  rev: v1.12.1
  hooks:
  - id: blacken-docs
    name: Format code in docstrings
    args: [--line-length, '120']
    additional_dependencies: [black==22.3.0]

# Upgrade and rewrite Python idioms.
- repo: https://github.com/asottile/pyupgrade
  rev: v2.31.0
  hooks:
  - id: pyupgrade
    name: Upgrade code idioms
    files: ^servicer/src/package_server/|^servicer/tests/|servicer/setup.py|^servicer_grpc/src/package_grpc/|^servicer_grpc/tests/|servicer_grpc/setup.py
    args: [--py39-plus]

# Similar to pylint, with a few more/different checks.
- repo: https://github.com/pycqa/flake8
  rev: 4.0.1
  hooks:
  - id: flake8
    name: Enforce PEP8 style guide
    files: ^servicer/src/package_server/|^servicer/tests/|servicer/setup.py|^servicer_grpc/src/package_grpc/|^servicer_grpc/tests/|servicer_grpc/setup.py
    additional_dependencies: [flake8-builtins==1.5.3, flake8-docstrings==1.6.0, flake8-rst-docstrings==0.2.3, pep8-naming==0.12.1]
    args: [--max-line-length=120]

# Run Pylint from the local repo to make sure venv packages
# specified in setup.py are available.
- repo: local
  hooks:
  - id: pylint
    name: pylint_grpc
    entry: pylint --rcfile ./servicer_grpc/pylintrc ./servicer_grpc
    language: python
    pass_filenames: false

  - id: pylint
    name: pylint_servicer
    entry: pylint --rcfile ./servicer/pylintrc ./servicer
    language: python
    pass_filenames: false

# Type-check all Python code.
- repo: local
  hooks:
  - id: mypy
    name: mypy_servicer
    entry: mypy
    language: python
    files: ^servicer/src/package_server/|^servicer/tests/|servicer/setup.py
    args: [--config-file, ./servicer/mypy.ini]

  - id: mypy
    name: mypy_grpc
    entry: mypy
    language: python
    files: ^servicer_grpc/src/package_grpc/|^servicer_grpc/tests/|servicer_grpc/setup.py
    args: [--config-file, ./servicer_grpc/mypy.ini]

# Enable a whole bunch of useful helper hooks, too.
# See https://pre-commit.com/hooks.html for more hooks.
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.1.0
  hooks:
  - id: check-ast
  - id: check-case-conflict
  - id: check-merge-conflict
  - id: debug-statements
  - id: end-of-file-fixer
    stages: [commit]
  - id: trailing-whitespace
    args: [--markdown-linebreak-ext=md]
    stages: [commit]
  - id: detect-private-key
  - id: detect-aws-credentials
    args: [--allow-missing-credentials]
  - id: check-yaml
  - id: check-toml
#  - id: check-xml
  - id: check-json
  - id: pretty-format-json
    args: [--autofix]
- repo: https://github.com/pre-commit/pygrep-hooks
  rev: v1.9.0
  hooks:
  - id: python-check-blanket-noqa
  - id: python-check-blanket-type-ignore
  - id: python-check-mock-methods
  - id: python-use-type-annotations
#  - id: rst-backticks    # need to figure out how to make this work with two packages and different docs
  - id: rst-directive-colons
  - id: rst-inline-touching-normal
  - id: text-unicode-replacement-char

# Check and prettify the configuration files.
- repo: https://github.com/macisamuele/language-formatters-pre-commit-hooks
  rev: v2.2.0
  hooks:
  - id: pretty-format-ini
    args: [--autofix]
  - id: pretty-format-yaml
    args: [--autofix]

# Make sure that the package's MANIFEST.in file works.
- repo: https://github.com/mgedmin/check-manifest
  rev: '0.47'
  hooks:
  - id: check-manifest
    name: Check package_grpc manifest
    args: [./servicer_grpc]
  - id: check-manifest
    name: Check package_server manifest
    args: [./servicer]


# On push to the remote, run the unit tests.
- repo: local
  hooks:
  - id: pytest
    name: Run unit tests on package_grpc
    entry: pytest -c ./servicer_grpc/pyproject.toml ./servicer_grpc/tests
    language: python
    verbose: true
    always_run: true
    pass_filenames: false
    stages: [commit, push]

  - id: pytest
    name: Run unit tests on package_servicer
    entry: pytest -c ./servicer/pyproject.toml ./servicer/tests
    language: python
    verbose: true
    always_run: true
    pass_filenames: false
    stages: [commit, push]
